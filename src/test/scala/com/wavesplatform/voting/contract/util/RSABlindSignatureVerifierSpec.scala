package com.wavesplatform.voting.contract.util

import java.math.BigInteger
import java.nio.charset.StandardCharsets
import java.security.Security

import com.wavesplatform.voting.contract.validators.BlindSignatureVerifier
import com.wavesplatform.voting.contract.validators.BlindSignatureVerifier.BlindSigPublicKey
import org.bouncycastle.jce.provider.BouncyCastleProvider
import org.scalatest.freespec.AnyFreeSpec
import org.scalatest.matchers.should.Matchers

class RSABlindSignatureVerifierSpec extends AnyFreeSpec with Matchers {

  Security.addProvider(new BouncyCastleProvider)

  private val hashSize = 3072

  private val message = "Hello World !"

  private val modulo = new BigInteger(
    "4557637902150497387277372865514650379134923950983451457800027520021446064239887137863107089272626916355091466064121876118682663659054004415811471274073761647063277151999898914584344199986852142532472984722811684421388943314466244883293439806052824916652783905859648134374189006578489056972347564638611282062262412833512261364577564941664332936999298564972684079984760988382437438891281079208197411731759222245317241949642543163651812885306372736587965106752112089468490107833178876365296528490093099618749559319191594217563519046705653315859168972312793028449132595815911363076124679846468221654544975268855522594953374375468911522403226953389438960378483213866332984861336902406060693911838940768876960887013826678426915673944742701794430055046247859292662376505617224834923989048287432603467163987547990161314610469361793928489158587794051503083704327236049485893223612588672114149865656062250554819712947116417147218454687",
    10)

  private val exp = new BigInteger("65537", 10)

  private val paddedMessage = new BigInteger(
    "412ec19341b2995e4d96241f0f1395047f6cde610961d44bc50e92c9974e36d28d6e44a5d2ee3f5db4c5388f985d21008674fac4dea0285aed1c86604332341547abbd22a647bd98f0d02bd69c5555bbff294678db0450d40c2226b03d1106a8f081e490a14f5b1f3e46e0f8e402382c15a3df1f3eaf4b7ee445c5d7766fbd66ba0c3119236df5bf33bcf727d880380f415bba6275b530c94328bb327823b5401b3127e079e7abf9fb097853d31d2d4867e28cd3d7a71727c0ee609f437a0c0868aa258bd3636953d6ea91f05d15460ee9ad70258498f623c1e75970df146061b806400a10170df19b15d72ec387e1c07fd0113fdfb807f230d4472b2239d4a16e12fb8bf8ddd69b8032c3eb018290a7b180e9b1a5f4c3754ec9cba442eb9743cd61833e2a849d75a77145f3f83639eda49469097313099fe6ccdb51c1af382f78e6b75349e1711755859c46c4d52c8b86b238884dae210a1503b29e29f6e990dc6cf017f25c747cb61cd9adfcc16ea0554bbd846d0e134c998204ee7eb9f192",
    16)

  private val signature = new BigInteger(
    "23b053f2f9f4f7cb73cb991790f1d5a2f3c139a1d2c0f4993ba0d0bb179f146597f548f9a064a3d9162334f36e01bf8ba25a682f10e12f631f29999c1a35e868db502355b4b5e956c3f65c5bb21e33ac1d144b6547987e42e8e3319c79935657ede3ea939b354408df921629a821b904286083fddb22b8fd301e4e6cfe2e71b93c744c1a623bc048c36af61438d007aa7a8c539ea8865cfd52b4a7071ebdb47988d436acae5b6307badef2c306e99e94c06ed9df0e7eceb0f25fd4da7496c7326d002d2c8b5135eb8d20d344420ce5b142093cba12eb9403d8e86b65c83df7c45fd4c7b335117cfca78e8df492d24b22767535e340c994bc86bd5793d9040c5ca152eb6f64f39d67e13018f6230bf25f30930e74c0c7ad0d611b35fa02eced97188e7c23cd2b26592aacee18d91139b34ce176bac19ae8ef5b97ec8e69f6a64c1ad1091ca8f05992b2c943b4fad1ce3a3ad2cbb871c1d20c7724bde038a5f6a554f0e302b47e1615ef3b46250aab19d368ddf252ffdb82b9f199e625db20602c",
    16)

  "test full domain hash function" in {
    val actual = BlindSignatureVerifier.fdh(message.getBytes(StandardCharsets.US_ASCII), modulo, hashSize)
    actual shouldBe paddedMessage
  }

  "test blind signature verification" in {
    val publicKey = BlindSigPublicKey(modulo, exp)
    val verified  = BlindSignatureVerifier.verify(signature, publicKey, message, hashSize)
    verified shouldEqual true
  }
}
